openapi: 3.0.1
info:
  title: Swagger HA
  description: ''
  contact:
    email: skavalt@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

################################### AUTH ################################### 
paths:
  /auth/login_flow:
    post:
      tags:
        - Auth
      summary: "Get flow id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  flow_id:
                    type: string
  /auth/login_flow/{flow_id}:
    post:
      tags:
        - Auth
      summary: "Get auth result"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
  /auth/token:
    post:
      tags:
        - Auth
      summary: Get access token for user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code: 
                  type: string
                  default: " {result_auth}"
                grant_type:
                  type: string
                  default: "authorization_code"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    default: "{access_token}"
  /auth/token/<remove>:
    post:
      tags:
      - Auth
      summary: Remove user auth token (using formdata)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  default: "revoke"
                token:
                  type: string
      responses:
        200:
          description: Ok

################################### GROUP ###################################          
  /websocket/group:
    get:
      tags:
      - Group
      summary: Get group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                types:
                  type: string
                  default:
                    "get_states"      
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: null
    delete:
      tags:
        - Group
      summary: Delete a group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: call_service
                domain:
                  type: string
                  default: group
                service:
                  type: string
                  default: remove
                service_data:
                  type: object
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: result
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: result
                  success:
                    type: boolean
                    default: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                    
  /api/services/group/set/<new>:
    post:
      tags:
      - Group
      summary: Create group
      description: Create a group. Since HA doesnt keep them in memory after a restart, we must keep the groups list locally, and send them to HA after every restart (can also be done using websocket).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object_id:
                  type: string
                name:
                  type: string
                entities:
                  type: string
                  
      responses:
        200:
          description: Ok

  /api/services/group/set:
    post:
      tags:
        - Group
      summary: "Update group"
      requestBody:
        description: "TODO : check if valid"
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                name:
                  type: string
                devices:
                  type: array
                  items: 
                    type: string
      responses:
        200:
          description: "Group updated (OK)"
  
  /websocket/group/list:
    get:
      tags:
        - Group
      summary: "List groups"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "get_states"
      responses:
        200:
          description: "Groups listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string

################################### DEVICE ###################################
# Add device with Zwave 
  /api/services/zwave/add_node:
    post:
      tags:
      - Device
      summary: Get device             
      responses:
        200:
          description: Ok

  /websocket/device:
    get:
      tags:
      - Device
      summary: Get device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default:
                    "search/related"
                item_type:
                  type: string
                  default:
                    "device"
                item_id:
                  type: string
                  
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: null
    patch:
      tags:
        - Device
      summary: Update device informations
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: config/device_registry/update
                device_id:
                  type: string
                name_by_user:
                  type: string
                area_id:
                  type: string
                  nullable: true
                disabled_by:
                  type: string
                  nullable: true
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: result
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
                    properties:
                      config_entries:
                        type: array
                        items:
                          type: string
                      connections:
                        type: array
                        items:
                          type: string
                      manufacturer:
                        type: string
                      model:
                        type: string
                      name:
                        type: string
                      sw_version:
                        type: string
                        nullable: true
                      entry_type:
                        type: string
                        nullable: true
                      id: 
                        type: string
                      identifiers:
                        type: array
                        items:
                          type: string
                      via_device_id:
                        type: string
                      area_id:
                        type: string
                        nullable: true
                      name_by_user:
                        type: string
                      disabled_by:
                        type: string
                        nullable: true

  /websocket/device/list:
    get:
      tags:
        - Device
      summary: "List devices"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/device_registry/list"
      responses:
        200:
          description: "Devices listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string
  /websocket/device/delete:
    delete:
      summary: Delete device (with Websocket)
      tags:
        - Device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/device_registry/update"
                device_id: 
                  type: string
                  default: "{device_id}"
                disabled_by:
                  type: string
                  default: "{user_name}"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: 
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string
  /websocket/device/restore:
    patch:
      summary: Restore a deleted device (websocket)
      tags:
        - Device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/device_registry/update"
                device_id:
                  type: string
                  default: "{device_id}"
                disabled_by: 
                  type: string
                  default: null
      responses:
        200:
          description: Device restored (websocket)
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: "true"
                  result:
                    type: array
                    items:
                      type: string
      
################################### USER ###################################
  /websocket/user/<create_step1>:
    post:
      tags:
        - User
      summary: Create an user (websocket). Step 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/auth/create"
                name: 
                  type: string
                  default: "{user_id}"
                group_ids: 
                  type: array
                  items:
                    type: string
                    default: "system-users"
      responses:
        200:
          description: OK (websocket)
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result: 
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              default: "{user_id}"
  /websocket/user/<create_step2>:
    post:
      tags:
        - User
      summary: Create an user (websocket). Step 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/auth_provider/homeassistant/create"
                user_id: 
                  type: string
                  default: "{user_id}"
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: OK (websocket)
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result: 
                    type: array
                    default: null


  /websocket/user:
    delete:
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: 
                  type: string
                  default: "config/auth/delete"
                user_id:
                  type: string
      responses:
        200:
          description: "User deleted (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: null
    get:
      tags:
        - User
      summary: "List users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/auth/list"
      responses:
        200:
          description: "Users listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string
    patch:
      tags:
        - User
      summary: "Update user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_ids: 
                  type: string
                is_active: 
                  type: boolean
                name: 
                  type: string
                type: 
                  type: string 
                  default: "config/auth/update"
                user_id: 
                  type: string
      responses:
        200:
          description: "Users listed (websocket response)"

################################### AUTOMATION ###################################
  /api/config/automation/config/{automation_id}:
    get:
      summary: "Get automation"
      tags:
        - Automation
      parameters:
      - name: automation_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: "OK"
    
      
    delete:
      summary: "Delete automation"
      tags:
        - Automation
      parameters:
      - name: automation_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Automation deleted (OK)"
    patch:
      summary: "Update automation"
      tags:
        - Automation
      description: "Update an automation"
      parameters:
      - name: automation_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: false
        description: TODO
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                alias:
                  type: string
                description:
                  type: string
                trigger:
                  type: array
                  items: 
                    type: object
                    properties:
                      platform:
                        type: string
                      event_type:
                        type: string
                      event_data:
                        type: object
                condition:
                  type: array
                  items:
                    type: string
                action:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      device_id:
                        type: string
                      entity_id:
                        type: string
                      domain:
                        type: string
                mode:
                  type: string
                  default: single       
      responses:
        200:
          description: "Automation updated (OK)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: ok
    post:
      summary: "Create automation"
      tags:
        - Automation
      description: "Create an automation"
      parameters:
      - name: automation_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: false
        description: TODO
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                description:
                  type: string
                trigger:
                  type: array
                  items: 
                    type: object
                    properties:
                      platform:
                        type: string
                      event_type:
                        type: string
                      event_data:
                        type: object
                condition:
                  type: array
                  items:
                    type: string
                action:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      device_id:
                        type: string
                      entity_id:
                        type: string
                      domain:
                        type: string
                mode:
                  type: string
                  default: single       
      responses:
        200:
          description: "Automation created (OK)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    default: ok

  /websocket/automation/list:
    get:
      tags:
        - Automation
      summary: "List automations"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "get_states"
      responses:
        200:
          description: "Automations listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string

################################### ROOM ###################################
  /websocket/room/delete:
    delete:
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: 
                  type: string
                  default: "config/area_registry/delete"
                area_id:
                  type: string
      responses:
        200:
          description: "Room deleted (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: "success"

  /websocket/room/updateName:
    put:
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/area_registry/update"
                area_id:
                  type: string
                name:
                  type: string
                  default: "{new_name}"
      responses:
        200:
          description: "Room name updated (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
                    properties:
                      area_id:
                        type: string
                        default: "{area_id}"
                  name:
                    type: string
                    default: "{new_name}"

  /websocket/room/updateDevices:
    put:
      tags:
        - Room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/device_registry/update"
                device_id:
                  type: string
                area_id:
                  type: string
      responses:
        200:
          description: "Room devices updated (websocket response) TODO: check result"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
         
  /websocket/room/:
    get:
      tags:
      - Room
      summary: Get room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                types:
                  type: string
                  default:
                    "search/related"
                item_type:
                  type: string
                  default:
                    "area"
                item_id:
                  type: string
                  
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: null
    post:
      tags:
      - Room
      summary: Create room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                types:
                  type: string
                  default:
                    "config/area_registry/create"
                name:
                  type: string
                  default:
                    "area"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: string
                    default: null
  /websocket/room/list:
    get:
      tags:
        - Room
      summary: "List rooms"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/area_registry/list"
      responses:
        200:
          description: "Automations listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string

################################### ENTITY ###################################
  /websocket/entity:
    post:
      tags:
        - Entity
      summary: "Update entity state"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: call_service
                domain:
                  type: string
                  default: light
                service:
                  type: string
                  default: turn_off
                service_data:
                  type: object
                  properties:
                    entity_id:
                      type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: result
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
                    properties:
                      id:
                        type: string
                      parent_id:
                        type: string
                        nullable: true
                      user_id:
                        type: string
    get:
      tags:
        - Entity
      summary: "List entities"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "get_states"
      responses:
        200:
          description: "Entities listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: array
                    items:
                      type: string
    patch:
      tags:
        - Entity
      summary: Disable an entity (websocket)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "config/entity_registry/update"
                entity_id:
                  type: string
                  default: "{entity_id}"
                name:
                  type: string
                  nullable: true
                icon:
                  type: string
                  nullable: true
                area_id:
                  type: string
                  nullable: true
                new_entity_id:
                  type: string
                  default: "{entity_id}"
                disabled_by:
                  type: string
                  default: "user"
      responses:
        200:
          description: OK (via websocket)
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
                    properties:
                      entity_entry:
                        type: object
                        properties:
                          config_entry_id:
                            type: string
                          device_id:
                            type: string
                          area_id: 
                            type: string
                            nullable: true
                          disabled_by:
                            type: string
                            default: user
                          entity_id:
                            type: string
                            default: "{entity_id}"
                          name:
                            type: string
                            nullable: true
                          icon:
                            type: string
                            nullable: true
                          platform:
                            type: string
                          original_name:
                            type: string
                          original_icon:
                            type: string
                          unique_id:
                            type: string
                          capabilities:
                            type: object

################################### System ###################################
  /websocket/system/restart:
    post:
      tags:
        - System
      summary: "Restart system "
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: "call_service"
                domain:
                  type: string
                  default: "homeassisatant"
                service:
                  type: string
                  default: "restart"
      responses:
        200:
          description: "Automations listed (websocket response)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    default: "result"
                  success:
                    type: boolean
                    default: true
                  result:
                    type: object
                    properties:
                      id: 
                        type: string
                      parent_id:
                        type: string
                      user_id:
                        type: string
                        
